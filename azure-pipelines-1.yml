trigger:
- main

pool:
  vmImage: 'windows-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    steps:
    - checkout: self
      displayName: 'Checkout source code'

    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
      displayName: 'Install Node.js'
    
    - script: |
        echo "Current working directory: $(System.DefaultWorkingDirectory)"
        ls -la $(System.DefaultWorkingDirectory)
        npm install
        npm run build --if-present
        npm run test --if-present
      displayName: 'npm install, build and test'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: ParallelTesting
  displayName: Parallel Testing stage
  dependsOn: Build
  jobs:
  - job: ParallelTesting
    strategy:
      parallel: 2
    steps:
    - checkout: self
      displayName: 'Checkout source code'

    - task: DownloadBuildArtifacts@0
      displayName: 'Download Build Artifacts'
      inputs:
        buildType: 'specific'
        project: '$(System.TeamProject)'
        definition: '25'  
        buildId: $(Build.BuildId)
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.DefaultWorkingDirectory)'

    - task: VSTest@2
      displayName: 'Run Tests'
      inputs:
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\bin\**\*test.dll
          **\bin\**\*tests.dll
        searchFolder: '$(System.DefaultWorkingDirectory)'
        distributionBatchType: 'basedOnExecutionTime'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: ParallelTesting
  jobs:
  - deployment: VMDeploy
    displayName: Web deploy
    environment:
      name: Ambiente1
      resourceType: VirtualMachine
      tags: web1
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - script: |
              echo "Deploying to Virtual Machine"
            displayName: 'Deploy to VM'